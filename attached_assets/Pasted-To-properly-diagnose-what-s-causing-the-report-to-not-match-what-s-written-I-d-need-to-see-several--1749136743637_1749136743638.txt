To properly diagnose what's causing the report to not match what's written, I'd need to see several key files and data. Here's what would help me identify the issues:To properly diagnose what's going wrong with your PDF report generation, I'd need to see these specific files and data:

## **Most Critical Files:**

1. **The actual DeepSeek API response** - A console.log or JSON dump of what `callDeepseek()` is returning
2. **The input data structure** - What `auditData` object looks like when passed to the PDF generator
3. **Console logs** - Any error messages or warnings during PDF generation
4. **The integration file** - How you're calling both functions together

## **Quick Debug Steps You Can Try Right Now:**

```typescript
// Add this at the very start of your generatePDFFromHTML function
console.log('=== PDF DEBUG INFO ===');
console.log('Audit data received:', JSON.stringify(audit, null, 2));
console.log('Form data received:', JSON.stringify(auditData, null, 2));
console.log('Risk score type:', typeof audit.riskScore, audit.riskScore);
console.log('Primary hazards:', audit.primaryHazards);
console.log('Recommendations count:', audit.recommendations?.length);
console.log('========================');
```

## **Most Likely Issues:**

1. **Data Structure Mismatch**: The DeepSeek API might be returning data in a different format than expected
2. **Missing Properties**: Some fields might be undefined/null causing the PDF to render incorrectly
3. **Array/Object Type Issues**: Properties expected to be arrays might be strings or vice versa
4. **Async/Promise Problems**: The DeepSeek call might not be completing before PDF generation starts

## **Can You Share:**

- The console output when you add those debug logs?
- Any error messages you're seeing?
- A description of how the current PDF differs from what you expect?
- The actual response from your DeepSeek API call?

This will help me pinpoint exactly what's going wrong and provide a targeted fix!